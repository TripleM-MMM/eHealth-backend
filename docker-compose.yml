---
version: '3'
services:
  ## MySQL Docker Compose Config
  mysql-user:
    container_name: mysql-user
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: 'user-service'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'root'
    volumes:
      - ./mysql-user:/data/mysql
    expose:
      - "3306"
    ports:
      - "3306:3306"
    restart: unless-stopped

  mysql-device:
    container_name: mysql-device
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: 'device-service'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_TCP_PORT: '3307'
    volumes:
      - ./mysql-device:/data/mysql
    expose:
      - "3307"
    ports:
      - "337:3307"
    restart: unless-stopped

  ## Mongo Docker Compose Config
  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: unless-stopped
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db

##   Keycloak Config with Mysql database
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:21.1.1
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

## Eureka Server
  discovery-server:
    image: mstrzezon/discovery-server:latest
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  api-gateway:
    image: mstrzezon/api-gateway:latest
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery-server
      - keycloak

##   Product-Service Docker Compose Config
  measurements-service:
    container_name: measurements-service
    image: mstrzezon/measurements-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - discovery-server
      - api-gateway

##   Order-Service Docker Compose Config
  user-service:
    container_name: user-service
    image: mstrzezon/user-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysql-user:3306/user-service?useSSL=false"
      SPRING_DATASOURCE_USERNAME: 'root'
      SPRING_DATASOURCE_PASSWORD: 'root'
    depends_on:
      - mysql-user
      - discovery-server
      - api-gateway

## Inventory-Service Docker Compose Config
  device-service:
    container_name: device-service
    image: mstrzezon/device-service:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      SPRING_DATASOURCE_USERNAME: 'root'
      SPRING_DATASOURCE_PASSWORD: 'root'
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysql-device:3307/device-service?useSSL=false"
    depends_on:
      - mysql-device
      - discovery-server
      - api-gateway
